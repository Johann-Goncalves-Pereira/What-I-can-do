@use "../abstracts/" as *;
@import url("https://fonts.googleapis.com/css2?family=Montserrat:wght@300;500;600&display=swap");

.main--home {
    @include defineColorHSL(--clr-background, 218, 9%, 18%);
    @include defineColorHSL(--clr-shadow, 230, 10%, 12%);
    @include defineColorHSL(--clr-main, 219, 99%, 51%);
    @include defineColorHSL(--clr-main-gradient, 292, 87%, 66%);

    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 2em;

    box-shadow: inset 0 0 32px -12px var(--clr-shadow);
    box-sizing: border-box;
    padding: Max(2em, 5vh) Max(2em, 5vw);

    background: var(--clr-background);
    font-family: "Montserrat", sans-serif;

    .shallow {
        @mixin bs($up: true, $blur, $size) {
            @if $up {
                box-shadow: 0 0 $blur 0 var(--clr-shadow), $size $size #{$blur * 0.5} #{$size * -0.75} var(--clr-shadow),
                    inset $size $size $blur 0 alpha(var(--clr-text), 0.05),
                    inset #{-$size} #{-$size} $blur 0 var(--clr-shadow);
            } @else {
                box-shadow: inset $size $size $blur 0 var(--clr-shadow),
                    inset #{-$size} #{-$size} $blur 0 alpha(var(--clr-text), 0.05);
            }
        }

        &--down,
        &--up {
            padding: 2em;
            border-radius: var(--br-16);
            width: fit-content;
            height: fit-content;
        }

        &--down {
            background-color: alpha(var(--clr-shadow), 0.05);
            @include bs(false, 15px, 10px);
        }
        &--up {
            @include bs(true, 15px, 10px);

            &.btm {
                $size: 5em;
                padding: 0;

                height: $size;
                width: $size * 2;

                background-color: transparent;
                color: var(--clr-text);

                transition: box-shadow 100ms ease-in;

                svg {
                    transition: transform 100ms ease-in;
                }

                &:focus-visible,
                &:focus {
                    @include bs(true, 10px, 2px);

                    :is(svg, em) {
                        transform: scale(0.9);
                    }
                }
            }
        }
    }

    $sad: 8px;
    .ctnr {
        &__text {
            &__title {
                position: relative;

                width: fit-content;
                font-size: var(--fs-14);

                &::after {
                    content: "";
                    position: absolute;
                    top: $sad;
                    left: calc(100% + $sad);

                    border-radius: 50%;
                    border: 2px solid var(--clr-text);

                    width: $sad;
                    height: $sad;
                }
            }

            &__medium {
                display: inline-block;
                font-size: var(--fs-6);
                font-weight: 600;
            }
        }

        &__btm {
            &--fc {
                display: flex;
                flex-direction: column;
                gap: 2em;
            }

            &--fr {
                display: flex;
                gap: 1.5em;

                .btm em {
                    font-size: var(--fs-4);
                    font-weight: 600;
                }
            }
        }
    }

    .weather {
        display: grid;
        grid-template-columns: repeat(2, min-content);
        grid-template-rows: repeat(2, min-content);
        grid-template-areas:
            "degree afterBall"
            "cityDescription cityDescription";
        gap: 2em;

        width: min-content;

        &__txt {
            &--n {
                grid-area: degree;
                margin-right: #{$sad};
                margin-left: 1em;
                width: min-content;
                margin-bottom: 4em;
            }

            &--s {
                display: grid;
                grid-template-rows: repeat(2, max-content);
                gap: 1rem;
                grid-area: cityDescription;

                color: alpha(var(--clr-text), 0.5);
                text-align: center;
                font-size: var(--fs-3);
                line-height: 1.125rem;

                em {
                    width: max-content;
                    font-weight: 600;
                    font-size: var(--fs-7);
                    color: var(--clr-text);
                }
            }
        }

        &::after {
            $sab: 100px;
            content: "";

            display: block;
            grid-area: afterBall;

            margin: auto auto 0 0;
            border-radius: 50%;

            background-image: linear-gradient(45deg, var(--clr-main), var(--clr-main-gradient));

            width: $sab;
            height: $sab;
        }
    }

    .line-btm {
        &__btm {
            height: 4em !important;
            width: 4em;

            svg {
                path {
                    fill: var(--clr-shadow);
                }
            }

            &:focus-visible,
            &:focus {
                svg path {
                    fill: url(#gradient-id);
                }
                // svg {
                //     @for $i from 1 through 2 {
                //         path:nth-child(#{$i}) {
                //             fill: url(#gradient-#{$i});
                //         }
                //     }
                // }
            }
        }
    }
}
